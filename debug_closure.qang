// Test if the issue is with closure capture in map expressions
var outer = 100;

// This should work fine - regular closure
var regular_closure = (x) -> x + outer;
print(regular_closure(5));  // Should be 105

// Test map expression capturing outer variable
var map_with_capture = 5||x -> x + outer|;
print(map_with_capture);  // Should be 105

// Test nested lambdas directly (not as map expressions)
fn make_nested(a) {
  return (b) -> {
    return (c) -> a + b + c;
  };
}

var nested_lambda = make_nested(1)(2);
print(nested_lambda(3));  // Should be 6

// The problematic case - nested map expressions
print("Nested map test:");
var nested_map = 1||a -> (2||b -> a + b|)|;  
print(nested_map);